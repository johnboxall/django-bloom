#summary BloomDevice let's you see which kinds of devices are browsing your mobile website.
#labels Phase-Deploy,Featured

= Introduction =

BloomDevice uses [http://deviceatlas.com/ Device Atlas] to detect the browsing device from `request.META['HTTP_USER_AGENT']`. BloomDevice modifies the `request` object, adding the dictionary `request.device` which contains information about the browsing device pulled from Device Atlas.

For example:

{{{
>>> request.META['HTTP_USER_AGENT']

'SonyEricssonW850i/R1GB Browser/NetFront/3.3 Profile/MIDP-2.0 Configuration/CLDC-1.1'

>>> request.device

{u'mobileDevice': '1', u'displayWidth': '240', u'displayHeight': '320', u'vendor': 'Sony Ericsson',  u'model': 'W850i', ...}
}}}

Device detection can be used either on all requests through `bloom.device.middleware.DeviceDetectMiddleware` or applied to individual views with the decorator function `bloom.device.decorators.detect_device`.

= Installation Overview =
 
  # Install Bloom
  # Install Device Atlas Python API
  # Install Device Atlas dependency `simplejson`
  # Install Device Atlas JSON library file
  # Add `bloom.device` to `INSTALLED_APPS`
  # Add `bloom.device.middleware.DeviceDetectMiddleware` to `MIDDLEWARE_CLASSES`
  # Add the `bloom.device.decorators.detect_device` decorator to a view

= Installation Guide =

=== 1. Install Bloom ===

See the Bloom installation guide here...

=== 2. Install Device Atlas Python API ===

Download the Device Atlas Python API from [http://deviceatlas.com/downloads http://deviceatlas.com/downloads]. You will need to sign up for a dev.mobi account to download the API.

At the time of writing the Device Atlas Python API has not been packaged using `setuptools` or `distutils`. You will have to build it yourself. Start by unzipping the file into your site-packages directory in a folder called `deviceatlas`.

{{{
/your/site/packages/directory/deviceatlas/
}}}

If you're unsure where you site-packages directory is use this command to find it:

{{{
python -c "from distutils.sysconfig import get_python_lib; print get_python_lib()"
}}}

_Be sure to move the Device Atlas API into a folder called `deviceatlas`_

=== Install Device Atlas dependency `simplejson` ===

To use Device Atlas we'll need to install it's dependencies.

{{{
easy_install simplejson
}}}

=== 3. Install Device Atlas JSON library file ===

Device Atlas works by parsing a JSON library file of device attributes. We'll need to download this file and put it in the `deviceatlas` directory we created. You can download the free Device Atlas developer file from [http://deviceatlas.com/product http://deviceatlas.com/product].

Once you have download the file be sure to place it in your `deviceatlas` directory. 

Take a deep breath. If everything went right Device Atlas should now be installed and ready. Test it out from the command line:

{{{
from deviceatlas.api import DaApi
from distutils.sysconfig import get_python_lib
da = DaApi()
path_to_device_atlas_json = "%s/deviceatlas/DeviceAtlas.json" % get_python_lib()
tree = da.getTreeFromFile(path_to_device_atlas_json)
da.getTreeRevision(tree)
ua = 'Mozilla/5.0 (iPhone; U; CPU like Mac OS X; en) AppleWebKit/420+ (KHTML, like Gecko) Version/3.0 Mobile/1A543 Safari/419.3'
da.getProperties(tree, ua)
}}}

If nothing broke, we're ready to move on, otherwise go back and check everything!


=== 4. Add `bloom.device` to `INSTALLED_APPS` ===

{{{
INSTALLED_APPS = (
    ...
    'bloom.device',
    ...
)
}}}

=== 5. Add `bloom.device.middleware.DeviceDetectMiddleware` to `MIDDLEWARE_CLASSES` ===

`DeviceDetectMiddleware` adds device information to all requests.

{{{
MIDDLEWARE_CLASSES = (
    ...
    'bloom.device.middleware.DeviceDetectMiddleware',
    ...
)
}}}

=== 6. Add the `bloom.device.decorators.detect_device` decorator to a view ===

The `detect_device` decorator can be used to add device information to a specific view.

{{{
from bloom.device.decorators import detect_device

@detect_device
def my_view(request):
    print request.device
    ...
}}}